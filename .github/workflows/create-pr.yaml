name: Create PR

on:
  push:
    branches:
      - main

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.61.0
        id: create_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: "patch"
          RELEASE_BRANCHES: "main"
          PRERELEASE: true
      - name: Verify tag
        run: |
          echo ${{ steps.create_tag.outputs.tag }}
          if [[ ! ${{ steps.create_tag.outputs.tag }} =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$ ]]; then
            echo "Error: Invalid semver version"
            exit 1
          fi

      - run: git checkout -b pr-test-${{ steps.create_tag.outputs.tag }}

      - run: echo ${{ steps.create_tag.outputs.tag }} > tag.txt

      - name: Git Commit to branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update targetRevision ${{ env.repoName }} ${{ inputs.environment }}"
          git push origin pr-test-${{ steps.create_tag.outputs.tag }}

      # GITHUB_TOKEN creates this PR and it seems we cant trigger any new Jobs based on that PR as it was created by GITHUB_TOKEN
      - run: echo "pr=$(gh pr create --fill)" >> "$GITHUB_OUTPUT"
        id: create_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Create PR from default github token
      - run: gh pr merge ${{ steps.create_pr.outputs.pr }} --merge --auto # Not allowed to use --admin with GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if this is not GITHUB_TOKEN the merge will trigger an action loop

      - run: gh pr review ${{ steps.create_pr.outputs.pr }} --approve
        env:
          GITHUB_TOKEN: ${{ secrets.PHILIP_TOKEN }} # Use seperate token to approve so we can have minimum 1 reviewer rule
